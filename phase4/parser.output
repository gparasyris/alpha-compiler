Terminals unused in grammar

   INTEGER
   IDENTIFIER
   REALNUMBER
   NOKEY
   LINECOMMENT
   COMMENT
   NESTED_COMMENT
   CLOSE_COMMENT
   UNDEFINED


State 103 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmt program
    2        | %empty

    3 stmt: expr SEMICOLON
    4     | ifstmt
    5     | whilestmt
    6     | forstmt
    7     | returnstmt
    8     | KEYWORD_BREAK SEMICOLON
    9     | KEYWORD_CONTINUE SEMICOLON
   10     | block
   11     | funcdef
   12     | SEMICOLON
   13     | error SEMICOLON

   14 expr: assignexpr
   15     | expr PLUS expr
   16     | expr MINUS expr
   17     | expr MULTIPLY expr
   18     | expr DIVIDE expr
   19     | expr MODULO expr
   20     | expr GREATER_THAN expr
   21     | expr GREATER_EQUAL expr
   22     | expr LESS_THAN expr
   23     | expr LESS_EQUAL expr
   24     | expr EQUAL expr
   25     | expr NOT_EQUAL expr
   26     | expr KEYWORD_AND L expr
   27     | expr KEYWORD_OR L expr
   28     | term

   29 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS
   30     | MINUS expr
   31     | KEYWORD_NOT expr
   32     | INCREMENT lvalue
   33     | lvalue INCREMENT
   34     | DECREMENT lvalue
   35     | lvalue DECREMENT
   36     | primary

   37 assignexpr: lvalue ASSIGN expr

   38 primary: lvalue
   39        | call
   40        | objectdef
   41        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   42        | const

   43 lvalue: ID
   44       | KEYWORD_LOCAL ID
   45       | DOUBLE_COLON ID
   46       | member

   47 member: lvalue DOT ID
   48       | lvalue LEFT_BRACKET expr RIGHT_BRACKET
   49       | call DOT ID
   50       | call LEFT_BRACKET expr RIGHT_BRACKET

   51 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   52     | lvalue callsuffix
   53     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   54 callsuffix: normcall
   55           | methodcall

   56 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   57 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   58 elist: expr elist_tmp
   59      | %empty

   60 elist_tmp: COMMA expr elist_tmp
   61          | %empty

   62 objectdef: LEFT_BRACKET elist RIGHT_BRACKET
   63          | LEFT_BRACKET indexed RIGHT_BRACKET

   64 indexed: indexedelem indexedelemtmp

   65 indexedelemtmp: COMMA indexedelem indexedelemtmp
   66               | %empty

   67 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE

   68 $@1: %empty

   69 $@2: %empty

   70 block: LEFT_BRACE $@1 block_stmt $@2 RIGHT_BRACE

   71 block_stmt: block_stmt stmt
   72           | %empty

   73 id_tmp: ID
   74       | %empty

   75 idlist: ID
   76       | idlist COMMA ID
   77       | %empty

   78 functionprefix: KEYWORD_FUNCTION id_tmp

   79 $@3: %empty

   80 funcargs: LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS

   81 funcbody: block

   82 funcdef: functionprefix funcargs funcbody

   83 const: INTCONST
   84      | REALCONST
   85      | STRING
   86      | KEYWORD_NIL
   87      | KEYWORD_TRUE
   88      | KEYWORD_FALSE

   89 ifprefix: KEYWORD_IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

   90 elseprefix: KEYWORD_ELSE

   91 ifstmt: ifprefix stmt
   92       | ifprefix stmt elseprefix stmt

   93 whilestart: KEYWORD_WHILE

   94 whilecond: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

   95 whileblock: stmt

   96 whilestmt: whilestart whilecond whileblock

   97 Q: %empty

   98 R: %empty

   99 forstmt: forprefix S Q elist R RIGHT_PARENTHESIS S stmt S

  100 forprefix: KEYWORD_FOR LEFT_PARENTHESIS Q elist R SEMICOLON L expr SEMICOLON

  101 S: %empty

  102 L: %empty

  103 returnstmt: KEYWORD_RETURN SEMICOLON
  104           | KEYWORD_RETURN expr SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256) 13
INTEGER (258)
STRING (259) 85
IDENTIFIER (260)
REALNUMBER (261)
KEYWORD_IF (262) 89
KEYWORD_ELSE (263) 90
KEYWORD_WHILE (264) 93
KEYWORD_FOR (265) 100
KEYWORD_FUNCTION (266) 78
KEYWORD_RETURN (267) 103 104
KEYWORD_BREAK (268) 8
KEYWORD_CONTINUE (269) 9
KEYWORD_AND (270) 26
KEYWORD_NOT (271) 31
KEYWORD_OR (272) 27
KEYWORD_LOCAL (273) 44
KEYWORD_TRUE (274) 87
KEYWORD_FALSE (275) 88
KEYWORD_NIL (276) 86
NOKEY (277)
ASSIGN (278) 37
PLUS (279) 15
MINUS (280) 16 30
MULTIPLY (281) 17
DIVIDE (282) 18
MODULO (283) 19
EQUAL (284) 24
NOT_EQUAL (285) 25
INCREMENT (286) 32 33
DECREMENT (287) 34 35
LESS_THAN (288) 22
GREATER_THAN (289) 20
LESS_EQUAL (290) 23
GREATER_EQUAL (291) 21
LEFT_BRACE (292) 67 70
RIGHT_BRACE (293) 67 70
LEFT_BRACKET (294) 48 50 62 63
RIGHT_BRACKET (295) 48 50 62 63
LEFT_PARENTHESIS (296) 29 41 51 53 56 57 80 89 94 100
RIGHT_PARENTHESIS (297) 29 41 51 53 56 57 80 89 94 99
SEMICOLON (298) 3 8 9 12 13 100 103 104
COMMA (299) 60 65 76
COLON (300) 67
DOUBLE_COLON (301) 45
DOT (302) 47 49
DOUBLE_DOT (303) 57
INTCONST (304) 83
REALCONST (305) 84
ID (306) 43 44 45 47 49 57 73 75 76
LINECOMMENT (307)
COMMENT (308)
NESTED_COMMENT (309)
CLOSE_COMMENT (310)
UNDEFINED (311)
UMINUS (312)


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
program (59)
    on left: 1 2, on right: 0 1
stmt (60)
    on left: 3 4 5 6 7 8 9 10 11 12 13, on right: 1 71 91 92 95 99
expr (61)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28, on right:
    3 15 16 17 18 19 20 21 22 23 24 25 26 27 29 30 31 37 48 50 58 60
    67 89 94 100 104
term (62)
    on left: 29 30 31 32 33 34 35 36, on right: 28
assignexpr (63)
    on left: 37, on right: 14
primary (64)
    on left: 38 39 40 41 42, on right: 36
lvalue (65)
    on left: 43 44 45 46, on right: 32 33 34 35 37 38 47 48 52
member (66)
    on left: 47 48 49 50, on right: 46
call (67)
    on left: 51 52 53, on right: 39 49 50 51
callsuffix (68)
    on left: 54 55, on right: 52
normcall (69)
    on left: 56, on right: 54
methodcall (70)
    on left: 57, on right: 55
elist (71)
    on left: 58 59, on right: 51 53 56 57 62 99 100
elist_tmp (72)
    on left: 60 61, on right: 58 60
objectdef (73)
    on left: 62 63, on right: 40
indexed (74)
    on left: 64, on right: 63
indexedelemtmp (75)
    on left: 65 66, on right: 64 65
indexedelem (76)
    on left: 67, on right: 64 65
block (77)
    on left: 70, on right: 10 81
$@1 (78)
    on left: 68, on right: 70
$@2 (79)
    on left: 69, on right: 70
block_stmt (80)
    on left: 71 72, on right: 70 71
id_tmp (81)
    on left: 73 74, on right: 78
idlist (82)
    on left: 75 76 77, on right: 76 80
functionprefix (83)
    on left: 78, on right: 82
funcargs (84)
    on left: 80, on right: 82
$@3 (85)
    on left: 79, on right: 80
funcbody (86)
    on left: 81, on right: 82
funcdef (87)
    on left: 82, on right: 11 41 53
const (88)
    on left: 83 84 85 86 87 88, on right: 42
ifprefix (89)
    on left: 89, on right: 91 92
elseprefix (90)
    on left: 90, on right: 92
ifstmt (91)
    on left: 91 92, on right: 4
whilestart (92)
    on left: 93, on right: 96
whilecond (93)
    on left: 94, on right: 96
whileblock (94)
    on left: 95, on right: 96
whilestmt (95)
    on left: 96, on right: 5
Q (96)
    on left: 97, on right: 99 100
R (97)
    on left: 98, on right: 99 100
forstmt (98)
    on left: 99, on right: 6
forprefix (99)
    on left: 100, on right: 99
S (100)
    on left: 101, on right: 99
L (101)
    on left: 102, on right: 26 27 100
returnstmt (102)
    on left: 103 104, on right: 7


State 0

    0 $accept: . program $end

    error             shift, and go to state 1
    STRING            shift, and go to state 2
    KEYWORD_IF        shift, and go to state 3
    KEYWORD_WHILE     shift, and go to state 4
    KEYWORD_FOR       shift, and go to state 5
    KEYWORD_FUNCTION  shift, and go to state 6
    KEYWORD_RETURN    shift, and go to state 7
    KEYWORD_BREAK     shift, and go to state 8
    KEYWORD_CONTINUE  shift, and go to state 9
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACE        shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    SEMICOLON         shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    $end  reduce using rule 2 (program)

    program         go to state 26
    stmt            go to state 27
    expr            go to state 28
    term            go to state 29
    assignexpr      go to state 30
    primary         go to state 31
    lvalue          go to state 32
    member          go to state 33
    call            go to state 34
    objectdef       go to state 35
    block           go to state 36
    functionprefix  go to state 37
    funcdef         go to state 38
    const           go to state 39
    ifprefix        go to state 40
    ifstmt          go to state 41
    whilestart      go to state 42
    whilestmt       go to state 43
    forstmt         go to state 44
    forprefix       go to state 45
    returnstmt      go to state 46


State 1

   13 stmt: error . SEMICOLON

    SEMICOLON  shift, and go to state 47


State 2

   85 const: STRING .

    $default  reduce using rule 85 (const)


State 3

   89 ifprefix: KEYWORD_IF . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 48


State 4

   93 whilestart: KEYWORD_WHILE .

    $default  reduce using rule 93 (whilestart)


State 5

  100 forprefix: KEYWORD_FOR . LEFT_PARENTHESIS Q elist R SEMICOLON L expr SEMICOLON

    LEFT_PARENTHESIS  shift, and go to state 49


State 6

   78 functionprefix: KEYWORD_FUNCTION . id_tmp

    ID  shift, and go to state 50

    $default  reduce using rule 74 (id_tmp)

    id_tmp  go to state 51


State 7

  103 returnstmt: KEYWORD_RETURN . SEMICOLON
  104           | KEYWORD_RETURN . expr SEMICOLON

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    SEMICOLON         shift, and go to state 52
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr        go to state 53
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 8

    8 stmt: KEYWORD_BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 54


State 9

    9 stmt: KEYWORD_CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 55


State 10

   31 term: KEYWORD_NOT . expr

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr        go to state 56
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 11

   44 lvalue: KEYWORD_LOCAL . ID

    ID  shift, and go to state 57


State 12

   87 const: KEYWORD_TRUE .

    $default  reduce using rule 87 (const)


State 13

   88 const: KEYWORD_FALSE .

    $default  reduce using rule 88 (const)


State 14

   86 const: KEYWORD_NIL .

    $default  reduce using rule 86 (const)


State 15

   30 term: MINUS . expr

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr        go to state 58
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 16

   32 term: INCREMENT . lvalue

    KEYWORD_LOCAL     shift, and go to state 11
    LEFT_PARENTHESIS  shift, and go to state 59
    DOUBLE_COLON      shift, and go to state 22
    ID                shift, and go to state 25

    lvalue  go to state 60
    member  go to state 33
    call    go to state 61


State 17

   34 term: DECREMENT . lvalue

    KEYWORD_LOCAL     shift, and go to state 11
    LEFT_PARENTHESIS  shift, and go to state 59
    DOUBLE_COLON      shift, and go to state 22
    ID                shift, and go to state 25

    lvalue  go to state 62
    member  go to state 33
    call    go to state 61


State 18

   70 block: LEFT_BRACE . $@1 block_stmt $@2 RIGHT_BRACE

    $default  reduce using rule 68 ($@1)

    $@1  go to state 63


State 19

   62 objectdef: LEFT_BRACKET . elist RIGHT_BRACKET
   63          | LEFT_BRACKET . indexed RIGHT_BRACKET

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACE        shift, and go to state 64
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    $default  reduce using rule 59 (elist)

    expr         go to state 65
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    elist        go to state 66
    objectdef    go to state 35
    indexed      go to state 67
    indexedelem  go to state 68
    const        go to state 39


State 20

   29 term: LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS
   41 primary: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS
   53 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    STRING            shift, and go to state 2
    KEYWORD_FUNCTION  shift, and go to state 6
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr            go to state 69
    term            go to state 29
    assignexpr      go to state 30
    primary         go to state 31
    lvalue          go to state 32
    member          go to state 33
    call            go to state 34
    objectdef       go to state 35
    functionprefix  go to state 37
    funcdef         go to state 70
    const           go to state 39


State 21

   12 stmt: SEMICOLON .

    $default  reduce using rule 12 (stmt)


State 22

   45 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 71


State 23

   83 const: INTCONST .

    $default  reduce using rule 83 (const)


State 24

   84 const: REALCONST .

    $default  reduce using rule 84 (const)


State 25

   43 lvalue: ID .

    $default  reduce using rule 43 (lvalue)


State 26

    0 $accept: program . $end

    $end  shift, and go to state 72


State 27

    1 program: stmt . program

    error             shift, and go to state 1
    STRING            shift, and go to state 2
    KEYWORD_IF        shift, and go to state 3
    KEYWORD_WHILE     shift, and go to state 4
    KEYWORD_FOR       shift, and go to state 5
    KEYWORD_FUNCTION  shift, and go to state 6
    KEYWORD_RETURN    shift, and go to state 7
    KEYWORD_BREAK     shift, and go to state 8
    KEYWORD_CONTINUE  shift, and go to state 9
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACE        shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    SEMICOLON         shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    $end  reduce using rule 2 (program)

    program         go to state 73
    stmt            go to state 27
    expr            go to state 28
    term            go to state 29
    assignexpr      go to state 30
    primary         go to state 31
    lvalue          go to state 32
    member          go to state 33
    call            go to state 34
    objectdef       go to state 35
    block           go to state 36
    functionprefix  go to state 37
    funcdef         go to state 38
    const           go to state 39
    ifprefix        go to state 40
    ifstmt          go to state 41
    whilestart      go to state 42
    whilestmt       go to state 43
    forstmt         go to state 44
    forprefix       go to state 45
    returnstmt      go to state 46


State 28

    3 stmt: expr . SEMICOLON
   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr

    KEYWORD_AND    shift, and go to state 74
    KEYWORD_OR     shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MULTIPLY       shift, and go to state 78
    DIVIDE         shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    LESS_THAN      shift, and go to state 83
    GREATER_THAN   shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    SEMICOLON      shift, and go to state 87


State 29

   28 expr: term .

    $default  reduce using rule 28 (expr)


State 30

   14 expr: assignexpr .

    $default  reduce using rule 14 (expr)


State 31

   36 term: primary .

    $default  reduce using rule 36 (term)


State 32

   33 term: lvalue . INCREMENT
   35     | lvalue . DECREMENT
   37 assignexpr: lvalue . ASSIGN expr
   38 primary: lvalue .
   47 member: lvalue . DOT ID
   48       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   52 call: lvalue . callsuffix

    ASSIGN            shift, and go to state 88
    INCREMENT         shift, and go to state 89
    DECREMENT         shift, and go to state 90
    LEFT_BRACKET      shift, and go to state 91
    LEFT_PARENTHESIS  shift, and go to state 92
    DOT               shift, and go to state 93
    DOUBLE_DOT        shift, and go to state 94

    $default  reduce using rule 38 (primary)

    callsuffix  go to state 95
    normcall    go to state 96
    methodcall  go to state 97


State 33

   46 lvalue: member .

    $default  reduce using rule 46 (lvalue)


State 34

   39 primary: call .
   49 member: call . DOT ID
   50       | call . LEFT_BRACKET expr RIGHT_BRACKET
   51 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACKET      shift, and go to state 98
    LEFT_PARENTHESIS  shift, and go to state 99
    DOT               shift, and go to state 100

    $default  reduce using rule 39 (primary)


State 35

   40 primary: objectdef .

    $default  reduce using rule 40 (primary)


State 36

   10 stmt: block .

    $default  reduce using rule 10 (stmt)


State 37

   82 funcdef: functionprefix . funcargs funcbody

    LEFT_PARENTHESIS  shift, and go to state 101

    funcargs  go to state 102


State 38

   11 stmt: funcdef .

    $default  reduce using rule 11 (stmt)


State 39

   42 primary: const .

    $default  reduce using rule 42 (primary)


State 40

   91 ifstmt: ifprefix . stmt
   92       | ifprefix . stmt elseprefix stmt

    error             shift, and go to state 1
    STRING            shift, and go to state 2
    KEYWORD_IF        shift, and go to state 3
    KEYWORD_WHILE     shift, and go to state 4
    KEYWORD_FOR       shift, and go to state 5
    KEYWORD_FUNCTION  shift, and go to state 6
    KEYWORD_RETURN    shift, and go to state 7
    KEYWORD_BREAK     shift, and go to state 8
    KEYWORD_CONTINUE  shift, and go to state 9
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACE        shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    SEMICOLON         shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    stmt            go to state 103
    expr            go to state 28
    term            go to state 29
    assignexpr      go to state 30
    primary         go to state 31
    lvalue          go to state 32
    member          go to state 33
    call            go to state 34
    objectdef       go to state 35
    block           go to state 36
    functionprefix  go to state 37
    funcdef         go to state 38
    const           go to state 39
    ifprefix        go to state 40
    ifstmt          go to state 41
    whilestart      go to state 42
    whilestmt       go to state 43
    forstmt         go to state 44
    forprefix       go to state 45
    returnstmt      go to state 46


State 41

    4 stmt: ifstmt .

    $default  reduce using rule 4 (stmt)


State 42

   96 whilestmt: whilestart . whilecond whileblock

    LEFT_PARENTHESIS  shift, and go to state 104

    whilecond  go to state 105


State 43

    5 stmt: whilestmt .

    $default  reduce using rule 5 (stmt)


State 44

    6 stmt: forstmt .

    $default  reduce using rule 6 (stmt)


State 45

   99 forstmt: forprefix . S Q elist R RIGHT_PARENTHESIS S stmt S

    $default  reduce using rule 101 (S)

    S  go to state 106


State 46

    7 stmt: returnstmt .

    $default  reduce using rule 7 (stmt)


State 47

   13 stmt: error SEMICOLON .

    $default  reduce using rule 13 (stmt)


State 48

   89 ifprefix: KEYWORD_IF LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr        go to state 107
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 49

  100 forprefix: KEYWORD_FOR LEFT_PARENTHESIS . Q elist R SEMICOLON L expr SEMICOLON

    $default  reduce using rule 97 (Q)

    Q  go to state 108


State 50

   73 id_tmp: ID .

    $default  reduce using rule 73 (id_tmp)


State 51

   78 functionprefix: KEYWORD_FUNCTION id_tmp .

    $default  reduce using rule 78 (functionprefix)


State 52

  103 returnstmt: KEYWORD_RETURN SEMICOLON .

    $default  reduce using rule 103 (returnstmt)


State 53

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr
  104 returnstmt: KEYWORD_RETURN expr . SEMICOLON

    KEYWORD_AND    shift, and go to state 74
    KEYWORD_OR     shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MULTIPLY       shift, and go to state 78
    DIVIDE         shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    LESS_THAN      shift, and go to state 83
    GREATER_THAN   shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    SEMICOLON      shift, and go to state 109


State 54

    8 stmt: KEYWORD_BREAK SEMICOLON .

    $default  reduce using rule 8 (stmt)


State 55

    9 stmt: KEYWORD_CONTINUE SEMICOLON .

    $default  reduce using rule 9 (stmt)


State 56

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr
   31 term: KEYWORD_NOT expr .

    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MULTIPLY       shift, and go to state 78
    DIVIDE         shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    LESS_THAN      shift, and go to state 83
    GREATER_THAN   shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86

    $default  reduce using rule 31 (term)


State 57

   44 lvalue: KEYWORD_LOCAL ID .

    $default  reduce using rule 44 (lvalue)


State 58

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr
   30 term: MINUS expr .

    $default  reduce using rule 30 (term)


State 59

   53 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    KEYWORD_FUNCTION  shift, and go to state 6

    functionprefix  go to state 37
    funcdef         go to state 110


State 60

   32 term: INCREMENT lvalue .
   47 member: lvalue . DOT ID
   48       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   52 call: lvalue . callsuffix

    LEFT_BRACKET      shift, and go to state 91
    LEFT_PARENTHESIS  shift, and go to state 92
    DOT               shift, and go to state 93
    DOUBLE_DOT        shift, and go to state 94

    $default  reduce using rule 32 (term)

    callsuffix  go to state 95
    normcall    go to state 96
    methodcall  go to state 97


State 61

   49 member: call . DOT ID
   50       | call . LEFT_BRACKET expr RIGHT_BRACKET
   51 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACKET      shift, and go to state 98
    LEFT_PARENTHESIS  shift, and go to state 99
    DOT               shift, and go to state 100


State 62

   34 term: DECREMENT lvalue .
   47 member: lvalue . DOT ID
   48       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   52 call: lvalue . callsuffix

    LEFT_BRACKET      shift, and go to state 91
    LEFT_PARENTHESIS  shift, and go to state 92
    DOT               shift, and go to state 93
    DOUBLE_DOT        shift, and go to state 94

    $default  reduce using rule 34 (term)

    callsuffix  go to state 95
    normcall    go to state 96
    methodcall  go to state 97


State 63

   70 block: LEFT_BRACE $@1 . block_stmt $@2 RIGHT_BRACE

    $default  reduce using rule 72 (block_stmt)

    block_stmt  go to state 111


State 64

   67 indexedelem: LEFT_BRACE . expr COLON expr RIGHT_BRACE

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr        go to state 112
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 65

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr
   58 elist: expr . elist_tmp

    KEYWORD_AND    shift, and go to state 74
    KEYWORD_OR     shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MULTIPLY       shift, and go to state 78
    DIVIDE         shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    LESS_THAN      shift, and go to state 83
    GREATER_THAN   shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    COMMA          shift, and go to state 113

    $default  reduce using rule 61 (elist_tmp)

    elist_tmp  go to state 114


State 66

   62 objectdef: LEFT_BRACKET elist . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 115


State 67

   63 objectdef: LEFT_BRACKET indexed . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 116


State 68

   64 indexed: indexedelem . indexedelemtmp

    COMMA  shift, and go to state 117

    $default  reduce using rule 66 (indexedelemtmp)

    indexedelemtmp  go to state 118


State 69

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr
   29 term: LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    KEYWORD_AND        shift, and go to state 74
    KEYWORD_OR         shift, and go to state 75
    PLUS               shift, and go to state 76
    MINUS              shift, and go to state 77
    MULTIPLY           shift, and go to state 78
    DIVIDE             shift, and go to state 79
    MODULO             shift, and go to state 80
    EQUAL              shift, and go to state 81
    NOT_EQUAL          shift, and go to state 82
    LESS_THAN          shift, and go to state 83
    GREATER_THAN       shift, and go to state 84
    LESS_EQUAL         shift, and go to state 85
    GREATER_EQUAL      shift, and go to state 86
    RIGHT_PARENTHESIS  shift, and go to state 119


State 70

   41 primary: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS
   53 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 120


State 71

   45 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 45 (lvalue)


State 72

    0 $accept: program $end .

    $default  accept


State 73

    1 program: stmt program .

    $default  reduce using rule 1 (program)


State 74

   26 expr: expr KEYWORD_AND . L expr

    $default  reduce using rule 102 (L)

    L  go to state 121


State 75

   27 expr: expr KEYWORD_OR . L expr

    $default  reduce using rule 102 (L)

    L  go to state 122


State 76

   15 expr: expr PLUS . expr

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr        go to state 123
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 77

   16 expr: expr MINUS . expr

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr        go to state 124
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 78

   17 expr: expr MULTIPLY . expr

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr        go to state 125
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 79

   18 expr: expr DIVIDE . expr

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr        go to state 126
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 80

   19 expr: expr MODULO . expr

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr        go to state 127
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 81

   24 expr: expr EQUAL . expr

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr        go to state 128
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 82

   25 expr: expr NOT_EQUAL . expr

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr        go to state 129
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 83

   22 expr: expr LESS_THAN . expr

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr        go to state 130
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 84

   20 expr: expr GREATER_THAN . expr

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr        go to state 131
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 85

   23 expr: expr LESS_EQUAL . expr

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr        go to state 132
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 86

   21 expr: expr GREATER_EQUAL . expr

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr        go to state 133
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 87

    3 stmt: expr SEMICOLON .

    $default  reduce using rule 3 (stmt)


State 88

   37 assignexpr: lvalue ASSIGN . expr

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr        go to state 134
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 89

   33 term: lvalue INCREMENT .

    $default  reduce using rule 33 (term)


State 90

   35 term: lvalue DECREMENT .

    $default  reduce using rule 35 (term)


State 91

   48 member: lvalue LEFT_BRACKET . expr RIGHT_BRACKET

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr        go to state 135
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 92

   56 normcall: LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    $default  reduce using rule 59 (elist)

    expr        go to state 65
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 136
    objectdef   go to state 35
    const       go to state 39


State 93

   47 member: lvalue DOT . ID

    ID  shift, and go to state 137


State 94

   57 methodcall: DOUBLE_DOT . ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    ID  shift, and go to state 138


State 95

   52 call: lvalue callsuffix .

    $default  reduce using rule 52 (call)


State 96

   54 callsuffix: normcall .

    $default  reduce using rule 54 (callsuffix)


State 97

   55 callsuffix: methodcall .

    $default  reduce using rule 55 (callsuffix)


State 98

   50 member: call LEFT_BRACKET . expr RIGHT_BRACKET

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr        go to state 139
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 99

   51 call: call LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    $default  reduce using rule 59 (elist)

    expr        go to state 65
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 140
    objectdef   go to state 35
    const       go to state 39


State 100

   49 member: call DOT . ID

    ID  shift, and go to state 141


State 101

   80 funcargs: LEFT_PARENTHESIS . $@3 idlist RIGHT_PARENTHESIS

    $default  reduce using rule 79 ($@3)

    $@3  go to state 142


State 102

   82 funcdef: functionprefix funcargs . funcbody

    LEFT_BRACE  shift, and go to state 18

    block     go to state 143
    funcbody  go to state 144


State 103

   91 ifstmt: ifprefix stmt .
   92       | ifprefix stmt . elseprefix stmt

    KEYWORD_ELSE  shift, and go to state 145

    KEYWORD_ELSE  [reduce using rule 91 (ifstmt)]
    $default      reduce using rule 91 (ifstmt)

    elseprefix  go to state 146


State 104

   94 whilecond: LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr        go to state 147
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 105

   96 whilestmt: whilestart whilecond . whileblock

    error             shift, and go to state 1
    STRING            shift, and go to state 2
    KEYWORD_IF        shift, and go to state 3
    KEYWORD_WHILE     shift, and go to state 4
    KEYWORD_FOR       shift, and go to state 5
    KEYWORD_FUNCTION  shift, and go to state 6
    KEYWORD_RETURN    shift, and go to state 7
    KEYWORD_BREAK     shift, and go to state 8
    KEYWORD_CONTINUE  shift, and go to state 9
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACE        shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    SEMICOLON         shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    stmt            go to state 148
    expr            go to state 28
    term            go to state 29
    assignexpr      go to state 30
    primary         go to state 31
    lvalue          go to state 32
    member          go to state 33
    call            go to state 34
    objectdef       go to state 35
    block           go to state 36
    functionprefix  go to state 37
    funcdef         go to state 38
    const           go to state 39
    ifprefix        go to state 40
    ifstmt          go to state 41
    whilestart      go to state 42
    whileblock      go to state 149
    whilestmt       go to state 43
    forstmt         go to state 44
    forprefix       go to state 45
    returnstmt      go to state 46


State 106

   99 forstmt: forprefix S . Q elist R RIGHT_PARENTHESIS S stmt S

    $default  reduce using rule 97 (Q)

    Q  go to state 150


State 107

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr
   89 ifprefix: KEYWORD_IF LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    KEYWORD_AND        shift, and go to state 74
    KEYWORD_OR         shift, and go to state 75
    PLUS               shift, and go to state 76
    MINUS              shift, and go to state 77
    MULTIPLY           shift, and go to state 78
    DIVIDE             shift, and go to state 79
    MODULO             shift, and go to state 80
    EQUAL              shift, and go to state 81
    NOT_EQUAL          shift, and go to state 82
    LESS_THAN          shift, and go to state 83
    GREATER_THAN       shift, and go to state 84
    LESS_EQUAL         shift, and go to state 85
    GREATER_EQUAL      shift, and go to state 86
    RIGHT_PARENTHESIS  shift, and go to state 151


State 108

  100 forprefix: KEYWORD_FOR LEFT_PARENTHESIS Q . elist R SEMICOLON L expr SEMICOLON

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    $default  reduce using rule 59 (elist)

    expr        go to state 65
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 152
    objectdef   go to state 35
    const       go to state 39


State 109

  104 returnstmt: KEYWORD_RETURN expr SEMICOLON .

    $default  reduce using rule 104 (returnstmt)


State 110

   53 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 153


State 111

   70 block: LEFT_BRACE $@1 block_stmt . $@2 RIGHT_BRACE
   71 block_stmt: block_stmt . stmt

    error             shift, and go to state 1
    STRING            shift, and go to state 2
    KEYWORD_IF        shift, and go to state 3
    KEYWORD_WHILE     shift, and go to state 4
    KEYWORD_FOR       shift, and go to state 5
    KEYWORD_FUNCTION  shift, and go to state 6
    KEYWORD_RETURN    shift, and go to state 7
    KEYWORD_BREAK     shift, and go to state 8
    KEYWORD_CONTINUE  shift, and go to state 9
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACE        shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    SEMICOLON         shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    RIGHT_BRACE  reduce using rule 69 ($@2)

    stmt            go to state 154
    expr            go to state 28
    term            go to state 29
    assignexpr      go to state 30
    primary         go to state 31
    lvalue          go to state 32
    member          go to state 33
    call            go to state 34
    objectdef       go to state 35
    block           go to state 36
    $@2             go to state 155
    functionprefix  go to state 37
    funcdef         go to state 38
    const           go to state 39
    ifprefix        go to state 40
    ifstmt          go to state 41
    whilestart      go to state 42
    whilestmt       go to state 43
    forstmt         go to state 44
    forprefix       go to state 45
    returnstmt      go to state 46


State 112

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr
   67 indexedelem: LEFT_BRACE expr . COLON expr RIGHT_BRACE

    KEYWORD_AND    shift, and go to state 74
    KEYWORD_OR     shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MULTIPLY       shift, and go to state 78
    DIVIDE         shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    LESS_THAN      shift, and go to state 83
    GREATER_THAN   shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    COLON          shift, and go to state 156


State 113

   60 elist_tmp: COMMA . expr elist_tmp

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr        go to state 157
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 114

   58 elist: expr elist_tmp .

    $default  reduce using rule 58 (elist)


State 115

   62 objectdef: LEFT_BRACKET elist RIGHT_BRACKET .

    $default  reduce using rule 62 (objectdef)


State 116

   63 objectdef: LEFT_BRACKET indexed RIGHT_BRACKET .

    $default  reduce using rule 63 (objectdef)


State 117

   65 indexedelemtmp: COMMA . indexedelem indexedelemtmp

    LEFT_BRACE  shift, and go to state 64

    indexedelem  go to state 158


State 118

   64 indexed: indexedelem indexedelemtmp .

    $default  reduce using rule 64 (indexed)


State 119

   29 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 29 (term)


State 120

   41 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS .
   53 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 159

    $default  reduce using rule 41 (primary)


State 121

   26 expr: expr KEYWORD_AND L . expr

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr        go to state 160
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 122

   27 expr: expr KEYWORD_OR L . expr

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr        go to state 161
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 123

   15 expr: expr . PLUS expr
   15     | expr PLUS expr .
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr

    MULTIPLY  shift, and go to state 78
    DIVIDE    shift, and go to state 79
    MODULO    shift, and go to state 80

    $default  reduce using rule 15 (expr)


State 124

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   16     | expr MINUS expr .
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr

    MULTIPLY  shift, and go to state 78
    DIVIDE    shift, and go to state 79
    MODULO    shift, and go to state 80

    $default  reduce using rule 16 (expr)


State 125

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   17     | expr MULTIPLY expr .
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr

    $default  reduce using rule 17 (expr)


State 126

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   18     | expr DIVIDE expr .
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr

    $default  reduce using rule 18 (expr)


State 127

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   19     | expr MODULO expr .
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr

    $default  reduce using rule 19 (expr)


State 128

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   24     | expr EQUAL expr .
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr

    PLUS      shift, and go to state 76
    MINUS     shift, and go to state 77
    MULTIPLY  shift, and go to state 78
    DIVIDE    shift, and go to state 79
    MODULO    shift, and go to state 80

    EQUAL          error (nonassociative)
    NOT_EQUAL      error (nonassociative)
    LESS_THAN      error (nonassociative)
    GREATER_THAN   error (nonassociative)
    LESS_EQUAL     error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 129

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   25     | expr NOT_EQUAL expr .
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr

    PLUS      shift, and go to state 76
    MINUS     shift, and go to state 77
    MULTIPLY  shift, and go to state 78
    DIVIDE    shift, and go to state 79
    MODULO    shift, and go to state 80

    EQUAL          error (nonassociative)
    NOT_EQUAL      error (nonassociative)
    LESS_THAN      error (nonassociative)
    GREATER_THAN   error (nonassociative)
    LESS_EQUAL     error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 130

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   22     | expr LESS_THAN expr .
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr

    PLUS      shift, and go to state 76
    MINUS     shift, and go to state 77
    MULTIPLY  shift, and go to state 78
    DIVIDE    shift, and go to state 79
    MODULO    shift, and go to state 80

    EQUAL          error (nonassociative)
    NOT_EQUAL      error (nonassociative)
    LESS_THAN      error (nonassociative)
    GREATER_THAN   error (nonassociative)
    LESS_EQUAL     error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 22 (expr)


State 131

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   20     | expr GREATER_THAN expr .
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr

    PLUS      shift, and go to state 76
    MINUS     shift, and go to state 77
    MULTIPLY  shift, and go to state 78
    DIVIDE    shift, and go to state 79
    MODULO    shift, and go to state 80

    EQUAL          error (nonassociative)
    NOT_EQUAL      error (nonassociative)
    LESS_THAN      error (nonassociative)
    GREATER_THAN   error (nonassociative)
    LESS_EQUAL     error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 20 (expr)


State 132

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   23     | expr LESS_EQUAL expr .
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr

    PLUS      shift, and go to state 76
    MINUS     shift, and go to state 77
    MULTIPLY  shift, and go to state 78
    DIVIDE    shift, and go to state 79
    MODULO    shift, and go to state 80

    EQUAL          error (nonassociative)
    NOT_EQUAL      error (nonassociative)
    LESS_THAN      error (nonassociative)
    GREATER_THAN   error (nonassociative)
    LESS_EQUAL     error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 23 (expr)


State 133

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   21     | expr GREATER_EQUAL expr .
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr

    PLUS      shift, and go to state 76
    MINUS     shift, and go to state 77
    MULTIPLY  shift, and go to state 78
    DIVIDE    shift, and go to state 79
    MODULO    shift, and go to state 80

    EQUAL          error (nonassociative)
    NOT_EQUAL      error (nonassociative)
    LESS_THAN      error (nonassociative)
    GREATER_THAN   error (nonassociative)
    LESS_EQUAL     error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 21 (expr)


State 134

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr
   37 assignexpr: lvalue ASSIGN expr .

    KEYWORD_AND    shift, and go to state 74
    KEYWORD_OR     shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MULTIPLY       shift, and go to state 78
    DIVIDE         shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    LESS_THAN      shift, and go to state 83
    GREATER_THAN   shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86

    $default  reduce using rule 37 (assignexpr)


State 135

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr
   48 member: lvalue LEFT_BRACKET expr . RIGHT_BRACKET

    KEYWORD_AND    shift, and go to state 74
    KEYWORD_OR     shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MULTIPLY       shift, and go to state 78
    DIVIDE         shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    LESS_THAN      shift, and go to state 83
    GREATER_THAN   shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    RIGHT_BRACKET  shift, and go to state 162


State 136

   56 normcall: LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 163


State 137

   47 member: lvalue DOT ID .

    $default  reduce using rule 47 (member)


State 138

   57 methodcall: DOUBLE_DOT ID . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 164


State 139

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr
   50 member: call LEFT_BRACKET expr . RIGHT_BRACKET

    KEYWORD_AND    shift, and go to state 74
    KEYWORD_OR     shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MULTIPLY       shift, and go to state 78
    DIVIDE         shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    LESS_THAN      shift, and go to state 83
    GREATER_THAN   shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    RIGHT_BRACKET  shift, and go to state 165


State 140

   51 call: call LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 166


State 141

   49 member: call DOT ID .

    $default  reduce using rule 49 (member)


State 142

   80 funcargs: LEFT_PARENTHESIS $@3 . idlist RIGHT_PARENTHESIS

    ID  shift, and go to state 167

    $default  reduce using rule 77 (idlist)

    idlist  go to state 168


State 143

   81 funcbody: block .

    $default  reduce using rule 81 (funcbody)


State 144

   82 funcdef: functionprefix funcargs funcbody .

    $default  reduce using rule 82 (funcdef)


State 145

   90 elseprefix: KEYWORD_ELSE .

    $default  reduce using rule 90 (elseprefix)


State 146

   92 ifstmt: ifprefix stmt elseprefix . stmt

    error             shift, and go to state 1
    STRING            shift, and go to state 2
    KEYWORD_IF        shift, and go to state 3
    KEYWORD_WHILE     shift, and go to state 4
    KEYWORD_FOR       shift, and go to state 5
    KEYWORD_FUNCTION  shift, and go to state 6
    KEYWORD_RETURN    shift, and go to state 7
    KEYWORD_BREAK     shift, and go to state 8
    KEYWORD_CONTINUE  shift, and go to state 9
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACE        shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    SEMICOLON         shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    stmt            go to state 169
    expr            go to state 28
    term            go to state 29
    assignexpr      go to state 30
    primary         go to state 31
    lvalue          go to state 32
    member          go to state 33
    call            go to state 34
    objectdef       go to state 35
    block           go to state 36
    functionprefix  go to state 37
    funcdef         go to state 38
    const           go to state 39
    ifprefix        go to state 40
    ifstmt          go to state 41
    whilestart      go to state 42
    whilestmt       go to state 43
    forstmt         go to state 44
    forprefix       go to state 45
    returnstmt      go to state 46


State 147

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr
   94 whilecond: LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    KEYWORD_AND        shift, and go to state 74
    KEYWORD_OR         shift, and go to state 75
    PLUS               shift, and go to state 76
    MINUS              shift, and go to state 77
    MULTIPLY           shift, and go to state 78
    DIVIDE             shift, and go to state 79
    MODULO             shift, and go to state 80
    EQUAL              shift, and go to state 81
    NOT_EQUAL          shift, and go to state 82
    LESS_THAN          shift, and go to state 83
    GREATER_THAN       shift, and go to state 84
    LESS_EQUAL         shift, and go to state 85
    GREATER_EQUAL      shift, and go to state 86
    RIGHT_PARENTHESIS  shift, and go to state 170


State 148

   95 whileblock: stmt .

    $default  reduce using rule 95 (whileblock)


State 149

   96 whilestmt: whilestart whilecond whileblock .

    $default  reduce using rule 96 (whilestmt)


State 150

   99 forstmt: forprefix S Q . elist R RIGHT_PARENTHESIS S stmt S

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    $default  reduce using rule 59 (elist)

    expr        go to state 65
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 171
    objectdef   go to state 35
    const       go to state 39


State 151

   89 ifprefix: KEYWORD_IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 89 (ifprefix)


State 152

  100 forprefix: KEYWORD_FOR LEFT_PARENTHESIS Q elist . R SEMICOLON L expr SEMICOLON

    $default  reduce using rule 98 (R)

    R  go to state 172


State 153

   53 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 159


State 154

   71 block_stmt: block_stmt stmt .

    $default  reduce using rule 71 (block_stmt)


State 155

   70 block: LEFT_BRACE $@1 block_stmt $@2 . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 173


State 156

   67 indexedelem: LEFT_BRACE expr COLON . expr RIGHT_BRACE

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr        go to state 174
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 157

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr
   60 elist_tmp: COMMA expr . elist_tmp

    KEYWORD_AND    shift, and go to state 74
    KEYWORD_OR     shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MULTIPLY       shift, and go to state 78
    DIVIDE         shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    LESS_THAN      shift, and go to state 83
    GREATER_THAN   shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    COMMA          shift, and go to state 113

    $default  reduce using rule 61 (elist_tmp)

    elist_tmp  go to state 175


State 158

   65 indexedelemtmp: COMMA indexedelem . indexedelemtmp

    COMMA  shift, and go to state 117

    $default  reduce using rule 66 (indexedelemtmp)

    indexedelemtmp  go to state 176


State 159

   53 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    $default  reduce using rule 59 (elist)

    expr        go to state 65
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 177
    objectdef   go to state 35
    const       go to state 39


State 160

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   26     | expr KEYWORD_AND L expr .
   27     | expr . KEYWORD_OR L expr

    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MULTIPLY       shift, and go to state 78
    DIVIDE         shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    LESS_THAN      shift, and go to state 83
    GREATER_THAN   shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86

    $default  reduce using rule 26 (expr)


State 161

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr
   27     | expr KEYWORD_OR L expr .

    KEYWORD_AND    shift, and go to state 74
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MULTIPLY       shift, and go to state 78
    DIVIDE         shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    LESS_THAN      shift, and go to state 83
    GREATER_THAN   shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86

    $default  reduce using rule 27 (expr)


State 162

   48 member: lvalue LEFT_BRACKET expr RIGHT_BRACKET .

    $default  reduce using rule 48 (member)


State 163

   56 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 56 (normcall)


State 164

   57 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    $default  reduce using rule 59 (elist)

    expr        go to state 65
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 178
    objectdef   go to state 35
    const       go to state 39


State 165

   50 member: call LEFT_BRACKET expr RIGHT_BRACKET .

    $default  reduce using rule 50 (member)


State 166

   51 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 51 (call)


State 167

   75 idlist: ID .

    $default  reduce using rule 75 (idlist)


State 168

   76 idlist: idlist . COMMA ID
   80 funcargs: LEFT_PARENTHESIS $@3 idlist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 179
    COMMA              shift, and go to state 180


State 169

   92 ifstmt: ifprefix stmt elseprefix stmt .

    $default  reduce using rule 92 (ifstmt)


State 170

   94 whilecond: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 94 (whilecond)


State 171

   99 forstmt: forprefix S Q elist . R RIGHT_PARENTHESIS S stmt S

    $default  reduce using rule 98 (R)

    R  go to state 181


State 172

  100 forprefix: KEYWORD_FOR LEFT_PARENTHESIS Q elist R . SEMICOLON L expr SEMICOLON

    SEMICOLON  shift, and go to state 182


State 173

   70 block: LEFT_BRACE $@1 block_stmt $@2 RIGHT_BRACE .

    $default  reduce using rule 70 (block)


State 174

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr
   67 indexedelem: LEFT_BRACE expr COLON expr . RIGHT_BRACE

    KEYWORD_AND    shift, and go to state 74
    KEYWORD_OR     shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MULTIPLY       shift, and go to state 78
    DIVIDE         shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    LESS_THAN      shift, and go to state 83
    GREATER_THAN   shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    RIGHT_BRACE    shift, and go to state 183


State 175

   60 elist_tmp: COMMA expr elist_tmp .

    $default  reduce using rule 60 (elist_tmp)


State 176

   65 indexedelemtmp: COMMA indexedelem indexedelemtmp .

    $default  reduce using rule 65 (indexedelemtmp)


State 177

   53 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 184


State 178

   57 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 185


State 179

   80 funcargs: LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS .

    $default  reduce using rule 80 (funcargs)


State 180

   76 idlist: idlist COMMA . ID

    ID  shift, and go to state 186


State 181

   99 forstmt: forprefix S Q elist R . RIGHT_PARENTHESIS S stmt S

    RIGHT_PARENTHESIS  shift, and go to state 187


State 182

  100 forprefix: KEYWORD_FOR LEFT_PARENTHESIS Q elist R SEMICOLON . L expr SEMICOLON

    $default  reduce using rule 102 (L)

    L  go to state 188


State 183

   67 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE .

    $default  reduce using rule 67 (indexedelem)


State 184

   53 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 53 (call)


State 185

   57 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 57 (methodcall)


State 186

   76 idlist: idlist COMMA ID .

    $default  reduce using rule 76 (idlist)


State 187

   99 forstmt: forprefix S Q elist R RIGHT_PARENTHESIS . S stmt S

    $default  reduce using rule 101 (S)

    S  go to state 189


State 188

  100 forprefix: KEYWORD_FOR LEFT_PARENTHESIS Q elist R SEMICOLON L . expr SEMICOLON

    STRING            shift, and go to state 2
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    expr        go to state 190
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 189

   99 forstmt: forprefix S Q elist R RIGHT_PARENTHESIS S . stmt S

    error             shift, and go to state 1
    STRING            shift, and go to state 2
    KEYWORD_IF        shift, and go to state 3
    KEYWORD_WHILE     shift, and go to state 4
    KEYWORD_FOR       shift, and go to state 5
    KEYWORD_FUNCTION  shift, and go to state 6
    KEYWORD_RETURN    shift, and go to state 7
    KEYWORD_BREAK     shift, and go to state 8
    KEYWORD_CONTINUE  shift, and go to state 9
    KEYWORD_NOT       shift, and go to state 10
    KEYWORD_LOCAL     shift, and go to state 11
    KEYWORD_TRUE      shift, and go to state 12
    KEYWORD_FALSE     shift, and go to state 13
    KEYWORD_NIL       shift, and go to state 14
    MINUS             shift, and go to state 15
    INCREMENT         shift, and go to state 16
    DECREMENT         shift, and go to state 17
    LEFT_BRACE        shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    SEMICOLON         shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 22
    INTCONST          shift, and go to state 23
    REALCONST         shift, and go to state 24
    ID                shift, and go to state 25

    stmt            go to state 191
    expr            go to state 28
    term            go to state 29
    assignexpr      go to state 30
    primary         go to state 31
    lvalue          go to state 32
    member          go to state 33
    call            go to state 34
    objectdef       go to state 35
    block           go to state 36
    functionprefix  go to state 37
    funcdef         go to state 38
    const           go to state 39
    ifprefix        go to state 40
    ifstmt          go to state 41
    whilestart      go to state 42
    whilestmt       go to state 43
    forstmt         go to state 44
    forprefix       go to state 45
    returnstmt      go to state 46


State 190

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTIPLY expr
   18     | expr . DIVIDE expr
   19     | expr . MODULO expr
   20     | expr . GREATER_THAN expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESS_THAN expr
   23     | expr . LESS_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . KEYWORD_AND L expr
   27     | expr . KEYWORD_OR L expr
  100 forprefix: KEYWORD_FOR LEFT_PARENTHESIS Q elist R SEMICOLON L expr . SEMICOLON

    KEYWORD_AND    shift, and go to state 74
    KEYWORD_OR     shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MULTIPLY       shift, and go to state 78
    DIVIDE         shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    LESS_THAN      shift, and go to state 83
    GREATER_THAN   shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    SEMICOLON      shift, and go to state 192


State 191

   99 forstmt: forprefix S Q elist R RIGHT_PARENTHESIS S stmt . S

    $default  reduce using rule 101 (S)

    S  go to state 193


State 192

  100 forprefix: KEYWORD_FOR LEFT_PARENTHESIS Q elist R SEMICOLON L expr SEMICOLON .

    $default  reduce using rule 100 (forprefix)


State 193

   99 forstmt: forprefix S Q elist R RIGHT_PARENTHESIS S stmt S .

    $default  reduce using rule 99 (forstmt)
